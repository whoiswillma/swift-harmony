from synch import Lock, acquire, release

const N = 5

forks = [Lock(),] * N

def diner(which):
    let left, right = (which, (which + 1) % N)
    let m, M = min(left, right), max(left, right):
        while choose({ False, True }):
            acquire(?forks[m])
            acquire(?forks[M])
            print (which, .dine)
            release(?forks[m])
            release(?forks[M])
            print (which, .think)

for i in {0..N-1}:
    spawn diner(i)
