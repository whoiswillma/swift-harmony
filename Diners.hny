from synch import Lock, acquire, release

const N = 5

forks = [Lock(),] * N

def diner(which):
    let left, right = (which, (which + 1) % N):
        # Give 1/6 chance of stopping
        while choose({ 1..6 }) < 6:
            acquire(?forks[left])
            log (which, .acquire, left)
            acquire(?forks[right])
            log (which, .acquire, right)

            release(?forks[left])
            log (which, .release, left)
            release(?forks[right])
            log (which, .release, right)

for i in {0..N-1}:
    spawn diner(i)
